steps:
# Build the alchemy test image
#
- name: 'gcr.io/cloud-builders/docker'
  args: ['build',
         '--build-arg', 'TARGET=test',
         '--tag', 'alchemy-base',
         '--file', 'Dockerfile',
         '.']
  id: 'build-test-image-base'
- name: 'gcr.io/cloud-builders/docker'
  args: ['build',
         '--build-arg', 'TARGET=test',
         '--tag', 'gcr.io/$PROJECT_ID/alchemy:test-${SHORT_SHA}',
         '--file', 'alchemy.Dockerfile',
         '.']
  wait_for: ['build-test-image-base']
  id: 'build-test-image-full'

# Run the tests, to prevent having broken
# images. May look unnecessary since there are
# GitHub actions that run tests, however it
# wouldn't hurt to double check.
#
- name: 'gcr.io/cloud-builders/docker'
  args: ['run',
         '--env', 'GOOGLE_AI_PLATFORM_ENABLED=0',
         '--env', 'USE_CLOUD_LOGGING=0',
         'gcr.io/$PROJECT_ID/alchemy:test-${SHORT_SHA}',
         'sh', 'ci/run_tests.sh']
  wait_for: ['build-test-image-full']
  id: 'run-tests'

# Build the target image
#
- name: 'gcr.io/cloud-builders/docker'
  args: ['build',
         '--build-arg', 'TARGET=${_TARGET}',
         '--tag', 'alchemy-base',
         '--file', 'Dockerfile',
         '.']
  wait_for: ['run-tests']
  id: 'build-target-image-base'
- name: 'gcr.io/cloud-builders/docker'
  args: ['build',
         '--build-arg', 'TARGET=${_TARGET}',
         '--tag', 'gcr.io/$PROJECT_ID/alchemy:${_TARGET}-${SHORT_SHA}',
         '--file', 'alchemy.Dockerfile',
         '.']
  wait_for: ['build-target-image-base']
  id: 'build-target-image-full'

timeout: 1200s
images:
  - 'gcr.io/$PROJECT_ID/alchemy:${_TARGET}-${SHORT_SHA}'
