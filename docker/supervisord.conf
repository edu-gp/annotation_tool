# http://supervisord.org/configuration.html#supervisord-section-example
[supervisord]
logfile = /tmp/supervisord.log
logfile_maxbytes = 50MB
logfile_backups=1000
loglevel = info
pidfile = /tmp/supervisord.pid
nodaemon = false
minfds = 1024
minprocs = 200
umask = 022
identifier = supervisor
directory = /tmp
nocleanup = true
childlogdir = /tmp
strip_ansi = false

# Run the monitoring server on 9001
# https://superuser.com/a/1303773
[inet_http_server]         
port=0.0.0.0:9001

[supervisorctl]
serverurl=http://0.0.0.0:9001

[rpcinterface:supervisor]
supervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface

# Programs
[program:redis]
command=redis-server
priority=10
autorestart=true

[program:ar_celery]
command=celery --app=ar.ar_celery worker -Q ar_celery -c 2 --autoscale=100,2 -l info --max-tasks-per-child 1 -n ar_celery
priority=100
autorestart=true

[program:train_celery]
command=celery --app=train.train_celery worker -Q train_celery -c 1 -l info --max-tasks-per-child 1 -P threads -n train_celery
priority=100
autorestart=true

[program:gcp_celery]
command=celery --app=train.gcp_celery worker -c 5 -Q gcp_celery -l info -n gcp_celery
priority=100
autorestart=true

[program:backend]
command=flask run -h 0.0.0.0 --port 5000
environment=FLASK_APP='backend',FLASK_ENV="development"
priority=1000

[program:frontend]
command=/annotation_tool/frontend/start_server.sh
priority=1000

# 1) Run this with:
#
#    supervisord -n
# 
# the -n means no daemon
#
# 2) Find errors with:
# 
#    supervisorctl tail -f <program> <output>
#
# e.g.
#
#    supervisorctl tail -f frontend stderr