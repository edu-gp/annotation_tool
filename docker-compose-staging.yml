version: '3.4'

volumes:
  admin_static_files:
  annotation_static_files:


x-logging: &gcp-logger
  driver: gcplogs
  options:
    gcp-project: nlp-flywheel
    labels: 'service'


services:
  admin_server:
    env_file: .env
    image: &img gcr.io/nlp-flywheel/alchemy:latest
    expose:
      - 5000
    volumes:
      - $GCLOUD_LOCAL_DIR:/root/.config/gcloud
      - $FILESTORE_LOCAL_DIR:/app/__filestore
      - type: volume
        source: admin_static_files
        target: /app/alchemy/admin_server/static
    command: [
        '--flask-env', 'production',
        '--flask-host', '0.0.0.0',
        '--flask-port', '5000',
        'admin_server'
    ]
    environment:
      - SCRIPT_NAME=/admin
    depends_on:
      - redis
    logging: *gcp-logger
    labels:
      service: alchemy-admin-server

  annotation_server:
    env_file: .env
    image: *img
    expose:
      - 5001
    volumes:
      - $GCLOUD_LOCAL_DIR:/root/.config/gcloud
      - $FILESTORE_LOCAL_DIR:/app/__filestore
      - type: volume
        source: annotation_static_files
        target: /app/alchemy/annotation_server/static
    command: [
        '--flask-env', 'production',
        '--flask-host', '0.0.0.0',
        '--flask-port', '5001',
        'annotation_server'
    ]
    depends_on:
      - redis
      - admin_server
    logging: *gcp-logger
    labels:
      service: alchemy-annotation-server

  ar_celery:
    env_file: .env
    image: *img
    volumes:
      - $GCLOUD_LOCAL_DIR:/root/.config/gcloud
      - $FILESTORE_LOCAL_DIR:/app/__filestore
    entrypoint: ["celery", "--app=alchemy.ar.ar_celery", "worker", "-Q", "ar_celery", "-c", "2", "--autoscale=100,2", "-l", "info", "--max-tasks-per-child", "1", "-n", "ar_celery"]
    depends_on:
      - redis
      - admin_server
    logging: *gcp-logger
    labels:
      service: alchemy-ar-celery

  train_celery:
    env_file: .env
    image: *img
    volumes:
      - $GCLOUD_LOCAL_DIR:/root/.config/gcloud
      - $FILESTORE_LOCAL_DIR:/app/__filestore
    entrypoint: ["celery", "--app=alchemy.train.train_celery", "worker", "-Q", "train_celery", "-c", "2", "--autoscale=100,2", "-l", "info", "--max-tasks-per-child", "1", "-n", "train_celery"]
    depends_on:
      - redis
      - admin_server
    logging: *gcp-logger
    labels:
      service: alchemy-train-celery

  gcp_celery:
    env_file: .env
    image: *img
    volumes:
      - $GCLOUD_LOCAL_DIR:/root/.config/gcloud
      - $FILESTORE_LOCAL_DIR:/app/__filestore
    entrypoint: ["celery", "--app=alchemy.train.gcp_celery", "worker", "-Q", "gcp_celery", "-c", "5", "--autoscale=100,2", "-l", "info", "-n", "gcp_celery"]
    depends_on:
      - redis
      - admin_server
    logging: *gcp-logger
    labels:
      service: alchemy-gcp-celery

  nginx:
    env_file:
      - .env
    environment:
      - ANNOTATION_SERVER_UWSGI=annotation_server:5001
      - ADMIN_SERVER_UWSGI=admin_server:5000
    image: nginx:stable-alpine
    volumes:
      - .conf/nginx:/etc/nginx/templates
      - /etc/letsencrypt/challenge:/var/www/letsencrypt
      - /etc/letsencrypt:/etc/letsencrypt
      - type: volume
        source: admin_static_files
        target: /static_files/admin_server
        read_only: true
      - type: volume
        source: annotation_static_files
        target: /static_files/annotation_server
        read_only: true
    depends_on:
      - admin_server
      - annotation_server
    links:
      - admin_server
      - annotation_server
    ports:
    - "80:80"
    - "443:443"
    logging: *gcp-logger
    labels:
      service: alchemy-nginx

  redis:
    image: "redis:alpine"
