"""create tables for user annotation label entity entity_type

Revision ID: ce4d216a6d0b
Revises: 
Create Date: 2020-04-17 19:44:03.522042

"""
import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = 'ce4d216a6d0b'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('context',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('hash', sa.String(length=128), nullable=False),
                    sa.Column('data', sa.JSON(), nullable=False),
                    sa.PrimaryKeyConstraint('id')
                    )
    with op.batch_alter_table('context', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_context_hash'), ['hash'],
                              unique=True)

    op.create_table('entity_type',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('name', sa.String(length=64), nullable=False),
                    sa.PrimaryKeyConstraint('id')
                    )
    with op.batch_alter_table('entity_type', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_entity_type_name'), ['name'],
                              unique=True)

    op.create_table('user',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('username', sa.String(length=64),
                              nullable=False),
                    sa.PrimaryKeyConstraint('id')
                    )
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_user_username'), ['username'],
                              unique=True)

    op.create_table('entity',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('name', sa.String(length=64), nullable=False),
                    sa.Column('entity_type_id', sa.Integer(), nullable=True),
                    sa.ForeignKeyConstraint(['entity_type_id'],
                                            ['entity_type.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    with op.batch_alter_table('entity', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_entity_name'), ['name'],
                              unique=True)

    op.create_table('label',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('name', sa.String(length=64), nullable=False),
                    sa.Column('entity_type_id', sa.Integer(), nullable=True),
                    sa.ForeignKeyConstraint(['entity_type_id'],
                                            ['entity_type.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    with op.batch_alter_table('label', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_label_name'), ['name'],
                              unique=True)

    op.create_table('annotation',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('value', sa.Integer(), nullable=False),
                    sa.Column('created_at', sa.DateTime(), nullable=False),
                    sa.Column('last_updated_at', sa.DateTime(),
                              nullable=False),
                    sa.Column('entity_id', sa.Integer(), nullable=True),
                    sa.Column('label_id', sa.Integer(), nullable=True),
                    sa.Column('user_id', sa.Integer(), nullable=True),
                    sa.Column('context_id', sa.Integer(), nullable=True),
                    sa.ForeignKeyConstraint(['context_id'], ['context.id'], ),
                    sa.ForeignKeyConstraint(['entity_id'], ['entity.id'], ),
                    sa.ForeignKeyConstraint(['label_id'], ['label.id'], ),
                    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('annotation')
    with op.batch_alter_table('label', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_label_name'))

    op.drop_table('label')
    with op.batch_alter_table('entity', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_entity_name'))

    op.drop_table('entity')
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_user_username'))

    op.drop_table('user')
    with op.batch_alter_table('entity_type', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_entity_type_name'))

    op.drop_table('entity_type')
    with op.batch_alter_table('context', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_context_hash'))

    op.drop_table('context')
    # ### end Alembic commands ###
