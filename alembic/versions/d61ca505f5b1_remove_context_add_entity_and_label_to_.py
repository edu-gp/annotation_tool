"""Remove Context, add Entity and Label to AnnotationRequest

Revision ID: d61ca505f5b1
Revises: bf2c53c6acc4
Create Date: 2020-04-28 15:13:27.243752

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import sqlite

# revision identifiers, used by Alembic.
revision = 'd61ca505f5b1'
down_revision = 'bf2c53c6acc4'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('context', schema=None) as batch_op:
        batch_op.drop_index('ix_context_hash')

    op.drop_table('context')
    with op.batch_alter_table('annotation_request', schema=None) as batch_op:
        batch_op.add_column(sa.Column('context', sa.JSON(), nullable=True))
        batch_op.add_column(
            sa.Column('entity_id', sa.Integer(), nullable=False))
        batch_op.add_column(sa.Column('label_id', sa.Integer(), nullable=True))
        batch_op.drop_constraint(
            'fk_annotation_request_classification_annotation_id_classification_annotation', type_='foreignkey')
        batch_op.drop_constraint(
            'fk_annotation_request_context_id_context', type_='foreignkey')
        batch_op.create_foreign_key(batch_op.f(
            'fk_annotation_request_entity_id_entity'), 'entity', ['entity_id'], ['id'])
        batch_op.create_foreign_key(batch_op.f(
            'fk_annotation_request_label_id_label'), 'label', ['label_id'], ['id'])
        batch_op.drop_column('additional_info')
        batch_op.drop_column('source')
        batch_op.drop_column('classification_annotation_id')
        batch_op.drop_column('context_id')

    with op.batch_alter_table('classification_annotation', schema=None) as batch_op:
        batch_op.add_column(sa.Column('context', sa.JSON(), nullable=True))
        batch_op.drop_constraint(
            'fk_classification_annotation_context_id_context', type_='foreignkey')
        batch_op.drop_column('context_id')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('classification_annotation', schema=None) as batch_op:
        batch_op.add_column(
            sa.Column('context_id', sa.INTEGER(), nullable=True))
        batch_op.create_foreign_key(
            'fk_classification_annotation_context_id_context', 'context', ['context_id'], ['id'])
        batch_op.drop_column('context')

    with op.batch_alter_table('annotation_request', schema=None) as batch_op:
        batch_op.add_column(
            sa.Column('context_id', sa.INTEGER(), nullable=False))
        batch_op.add_column(
            sa.Column('classification_annotation_id', sa.INTEGER(), nullable=True))
        batch_op.add_column(sa.Column('source', sqlite.JSON(), nullable=True))
        batch_op.add_column(sa.Column('additional_info',
                                      sqlite.JSON(), nullable=True))
        batch_op.drop_constraint(batch_op.f(
            'fk_annotation_request_label_id_label'), type_='foreignkey')
        batch_op.drop_constraint(batch_op.f(
            'fk_annotation_request_entity_id_entity'), type_='foreignkey')
        batch_op.create_foreign_key(
            'fk_annotation_request_context_id_context', 'context', ['context_id'], ['id'])
        batch_op.create_foreign_key('fk_annotation_request_classification_annotation_id_classification_annotation',
                                    'classification_annotation', ['classification_annotation_id'], ['id'])
        batch_op.drop_column('label_id')
        batch_op.drop_column('entity_id')
        batch_op.drop_column('context')

    op.create_table('context',
                    sa.Column('id', sa.INTEGER(), nullable=False),
                    sa.Column('hash', sa.VARCHAR(length=128), nullable=False),
                    sa.Column('data', sqlite.JSON(), nullable=False),
                    sa.PrimaryKeyConstraint('id', name='pk_context')
                    )
    with op.batch_alter_table('context', schema=None) as batch_op:
        batch_op.create_index('ix_context_hash', ['hash'], unique=1)

    # ### end Alembic commands ###
