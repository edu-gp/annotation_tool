"""Remove Entity, EntityType, and Label

Revision ID: fa38f04f8cbd
Revises: 8a771bc3c9eb
Create Date: 2020-05-01 10:19:23.840885

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'fa38f04f8cbd'
down_revision = '8a771bc3c9eb'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('annotation_request', schema=None) as batch_op:
        batch_op.add_column(sa.Column('entity', sa.String(), nullable=False))
        batch_op.add_column(
            sa.Column('entity_type', sa.String(), nullable=False))
        batch_op.add_column(sa.Column('label', sa.String(), nullable=False))
        batch_op.create_index(batch_op.f('ix_annotation_request_entity'), [
                              'entity'], unique=False)
        batch_op.create_index(batch_op.f('ix_annotation_request_entity_type'), [
                              'entity_type'], unique=False)
        batch_op.create_index(batch_op.f('ix_annotation_request_label'), [
                              'label'], unique=False)
        batch_op.drop_constraint(
            'fk_annotation_request_entity_id_entity', type_='foreignkey')
        batch_op.drop_constraint(
            'fk_annotation_request_label_id_label', type_='foreignkey')
        batch_op.drop_column('entity_id')
        batch_op.drop_column('label_id')

    with op.batch_alter_table('classification_annotation', schema=None) as batch_op:
        batch_op.add_column(sa.Column('entity', sa.String(), nullable=False))
        batch_op.add_column(
            sa.Column('entity_type', sa.String(), nullable=False))
        batch_op.add_column(sa.Column('label', sa.String(), nullable=False))
        batch_op.create_index(batch_op.f('ix_classification_annotation_entity'), [
                              'entity'], unique=False)
        batch_op.create_index(batch_op.f('ix_classification_annotation_entity_type'), [
                              'entity_type'], unique=False)
        batch_op.create_index(batch_op.f('ix_classification_annotation_label'), [
                              'label'], unique=False)
        batch_op.drop_constraint(
            'fk_classification_annotation_label_id_label', type_='foreignkey')
        batch_op.drop_constraint(
            'fk_classification_annotation_entity_id_entity', type_='foreignkey')
        batch_op.drop_column('entity_id')
        batch_op.drop_column('label_id')

    with op.batch_alter_table('classification_training_data', schema=None) as batch_op:
        batch_op.add_column(sa.Column('label', sa.String(), nullable=False))
        batch_op.create_index(batch_op.f('ix_classification_training_data_label'), [
                              'label'], unique=False)
        batch_op.drop_constraint(
            'fk_classification_training_data_label_id_label', type_='foreignkey')
        batch_op.drop_column('label_id')

    with op.batch_alter_table('label', schema=None) as batch_op:
        batch_op.drop_index('ix_label_name')
    op.drop_table('label')

    with op.batch_alter_table('entity_type', schema=None) as batch_op:
        batch_op.drop_index('ix_entity_type_name')
    op.drop_table('entity_type')

    with op.batch_alter_table('entity', schema=None) as batch_op:
        batch_op.drop_index('ix_entity_name')
    op.drop_table('entity')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('classification_training_data', schema=None) as batch_op:
        batch_op.add_column(
            sa.Column('label_id', sa.INTEGER(), nullable=False))
        batch_op.create_foreign_key(
            'fk_classification_training_data_label_id_label', 'label', ['label_id'], ['id'])
        batch_op.drop_index(batch_op.f(
            'ix_classification_training_data_label'))
        batch_op.drop_column('label')

    with op.batch_alter_table('classification_annotation', schema=None) as batch_op:
        batch_op.add_column(sa.Column('label_id', sa.INTEGER(), nullable=True))
        batch_op.add_column(
            sa.Column('entity_id', sa.INTEGER(), nullable=True))
        batch_op.create_foreign_key(
            'fk_classification_annotation_entity_id_entity', 'entity', ['entity_id'], ['id'])
        batch_op.create_foreign_key(
            'fk_classification_annotation_label_id_label', 'label', ['label_id'], ['id'])
        batch_op.drop_index(batch_op.f('ix_classification_annotation_label'))
        batch_op.drop_index(batch_op.f(
            'ix_classification_annotation_entity_type'))
        batch_op.drop_index(batch_op.f('ix_classification_annotation_entity'))
        batch_op.drop_column('label')
        batch_op.drop_column('entity_type')
        batch_op.drop_column('entity')

    with op.batch_alter_table('annotation_request', schema=None) as batch_op:
        batch_op.add_column(sa.Column('label_id', sa.INTEGER(), nullable=True))
        batch_op.add_column(
            sa.Column('entity_id', sa.INTEGER(), nullable=False))
        batch_op.create_foreign_key(
            'fk_annotation_request_label_id_label', 'label', ['label_id'], ['id'])
        batch_op.create_foreign_key(
            'fk_annotation_request_entity_id_entity', 'entity', ['entity_id'], ['id'])
        batch_op.drop_index(batch_op.f('ix_annotation_request_label'))
        batch_op.drop_index(batch_op.f('ix_annotation_request_entity_type'))
        batch_op.drop_index(batch_op.f('ix_annotation_request_entity'))
        batch_op.drop_column('label')
        batch_op.drop_column('entity_type')
        batch_op.drop_column('entity')

    op.create_table('entity',
                    sa.Column('id', sa.INTEGER(), nullable=False),
                    sa.Column('name', sa.VARCHAR(length=64), nullable=False),
                    sa.Column('entity_type_id', sa.INTEGER(), nullable=True),
                    sa.ForeignKeyConstraint(['entity_type_id'], [
                        'entity_type.id'], name='fk_entity_entity_type_id_entity_type'),
                    sa.PrimaryKeyConstraint('id', name='pk_entity')
                    )
    with op.batch_alter_table('entity', schema=None) as batch_op:
        batch_op.create_index('ix_entity_name', ['name'], unique=1)

    op.create_table('entity_type',
                    sa.Column('id', sa.INTEGER(), nullable=False),
                    sa.Column('name', sa.VARCHAR(length=64), nullable=False),
                    sa.PrimaryKeyConstraint('id', name='pk_entity_type')
                    )
    with op.batch_alter_table('entity_type', schema=None) as batch_op:
        batch_op.create_index('ix_entity_type_name', ['name'], unique=1)

    op.create_table('label',
                    sa.Column('id', sa.INTEGER(), nullable=False),
                    sa.Column('name', sa.VARCHAR(length=64), nullable=False),
                    sa.Column('entity_type_id', sa.INTEGER(), nullable=True),
                    sa.ForeignKeyConstraint(['entity_type_id'], [
                        'entity_type.id'], name='fk_label_entity_type_id_entity_type'),
                    sa.PrimaryKeyConstraint('id', name='pk_label')
                    )
    with op.batch_alter_table('label', schema=None) as batch_op:
        batch_op.create_index('ix_label_name', ['name'], unique=1)

    # ### end Alembic commands ###
